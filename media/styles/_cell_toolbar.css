/* --- 5. Cell-Specific Toolbar (Run, Delete, etc.) --- */
.cell-toolbar {
    display: flex;
    /* This aligns the top of the Run/Delete buttons */
    align-items: center; 
    /* This gives the toolbar a consistent height across ALL slides,
        preventing layout shift between Markdown and Code cells. */
    min-height: 40px; 
    /* padding: 0 10px; Horizontal padding for buttons */
    padding: 0 8px;
    flex-shrink: 0; /* This is important: prevents the toolbar from shrinking */
    background-color: var(--vscode-editorGroupHeader-tabsBackground, #2c2c2c); /* Toolbar distinct background */
    border-bottom: 1px solid var(--vscode-notebook-cellBorderColor, var(--vscode-editorGroup-border, #373737));
    z-index: 10; /* Ensure it's above other cell content if it were to overlap (shouldn't with padding-top) */
}


.toolbar-actions-left,
.toolbar-actions-right {
    display: flex;
    align-items: center;
}

.toolbar-actions-left .cell-action-button {
    margin-right: 8px; /* Space between buttons on the left */
}
.toolbar-actions-right .cell-action-button {
    margin-left: 8px; /* Space between buttons on the right */
}

/* Remove margin-left from the very first button in each group if desired */
.toolbar-actions-left .cell-action-button:first-child,
.toolbar-actions-right .cell-action-button:first-child {
    margin-left: 0;
}

.cell-toolbar .run-button { /* Specific style for run button if needed, e.g., margin */
    margin-right: auto; /* This will push other items to the right */
}

.cell-action-button {
    background: none;
    border: none;
    color: var(--vscode-icon-foreground);
    cursor: pointer;
    padding: 4px 8px;
    margin-left: 8px; /* Space between action buttons */
    font-size: var(--vscode-font-size);
    border-radius: 3px;
}

.cell-action-button.run-button { /* If run button is first, it might not need margin-left */
    margin-left: 0;
}


.cell-action-button:hover {
    background-color: var(--vscode-toolbar-hoverBackground, var(--vscode-list-hoverBackground, rgba(255, 255, 255, 0.1)));
}

.cell-action-button:active {
    background-color: var(--vscode-toolbar-activeBackground, var(--vscode-list-activeSelectionBackground, rgba(255, 255, 255, 0.2)));
}

/* New container for the run button and its status, lays them out vertically */
.run-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-right: 8px;
}

.run-container .run-button {
  /* Add a top margin to push it down slightly */
  margin-top: 4px; 
}

/* The status area below the run button */
.execution-status {
    position: absolute;
    bottom: 8px; /* 8px from the bottom */
    right: 15px; /* 15px from the right */
    
    font-family: var(--vscode-editor-font-family, monospace);
    font-size: 11px;
    color: var(--vscode-descriptionForeground);
    opacity: 0.9;
    
    /* This prevents the text from being selected when the user selects code */
    user-select: none; 
}

/* The spinner animation */
.execution-status .spinner {
  width: 1em;
  height: 1em;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  animation: cell-spinner-anim 0.8s linear infinite;
}

/* Styles for the success/error icons */
.execution-status .icon {
  margin-right: 4px;
  font-weight: bold;
}
.execution-status .icon.success {
  color: var(--vscode-testing-iconPassed);
}
.execution-status .icon.error {
  color: var(--vscode-testing-iconFailed);
}

@keyframes cell-spinner-anim {
  to { transform: rotate(360deg); }
}
