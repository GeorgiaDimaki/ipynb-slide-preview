/* --- PRESENTATION MODE STYLES --- */
/* This is the new container. It is the hover target AND it holds the toolbar. */
body.is-presenting #toolbar-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10000;
    /* The container itself is invisible and just defines the area */
}

/* The toolbar is positioned inside the container and slides up/down */
body.is-presenting #toolbar-container #main-toolbar {
    transform: translateY(-100%);
    transition: transform 0.3s ease-in-out;
}

/* When you hover the CONTAINER, the TOOLBAR inside it becomes visible */
body.is-presenting #toolbar-container:hover #main-toolbar {
    transform: translateY(0);
}

body.is-presenting .execution-status {
    bottom: 18px; 
    right: 25px;
}

body.is-presenting .execution-count {
    bottom: 18px; 
    left: 25px;
}

/* Hide the bottom controls completely in presentation mode. */
/* You can comment out this rule if you decide you want to keep them. */
body.is-presenting #controls {
    display: none;
}

/* Ensure the main view takes up the newly available space */
body.is-presenting #main-view-wrapper {
    height: 100vh;
    justify-content: center; /* This vertically centers the content */
}

/* 1. Hide the side "Add Slide" controls completely */
body.is-presenting .side-add-slide-container {
    display: none;
}

/* 2. Hide all buttons in the cell toolbar by default */
body.is-presenting .cell-toolbar {
    display: none;
}

body.is-presenting .code-cell-body {
    padding: 10px;
}

/* Style for the shortcut notification overlay */
#shortcut-overlay {
    position: fixed;
    top: 40%; /* Position the top edge at the vertical center */
    left: 50%; /* Position the left edge at the horizontal center */
    transform: translate(-50%, -50%); /* Move the element back by half its own width and height */
    
    background-color: var(--vscode-editorWidget-background); /* Solid, non-transparent charcoal background */
    color: var(--vscode-editorWidget-foreground);
    border: 1px solid var(--vscode-editorWidget-border);
    border-radius: 8px; /* Slightly more rounded */
    padding: 20px 30px;
    z-index: 9999;
    font-size: 14px;
    text-align: left;
    width: 350px; /* Set a fixed width */
    
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.4s ease-in-out, visibility 0.4s ease-in-out;
}

#shortcut-overlay.visible {
    opacity: 1;
    visibility: visible;
}

#shortcut-overlay ul {
    margin: 0;
    padding: 0;
    list-style: none;
}
#shortcut-overlay li {
    display: flex;
    justify-content: space-between; /* Pushes key and description to opposite ends */
    align-items: center;
    margin-bottom: 8px;
}

/* This adjusts the alignment for all shortcut keys in the overlay */
#shortcut-overlay li kbd {
    display: inline-block;
    padding: 2px 6px;
    border-radius: 3px;
    background-color: var(--vscode-textCodeBlock-background);
    margin-right: 20px;
    min-width: 80px; 
    text-align: center;
}

/* This new rule targets our square arrow keys */
.arrow-key {
    display: inline-flex; /* Use flexbox for easy centering */
    align-items: center;
    justify-content: center;
    width: 25px; /* Makes the box a square */
    height: 25px;
    min-width: 25px !important; /* Overrides the general min-width */
    padding: 0; /* Remove padding to keep it square */
}