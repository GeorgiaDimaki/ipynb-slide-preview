/* --- 1. Global Styles & Base Layout --- */
html,
body {
    height: 100vh;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Prevent body scrollbars; children manage their own scroll */
    display: flex;
    flex-direction: column;

    /* Base VS Code Theming */
    font-family: var(--vscode-font-family, Arial, Helvetica, sans-serif);
    font-weight: var(--vscode-font-weight);
    font-size: var(--vscode-font-size);
    color: var(--vscode-editor-foreground);
    background-color: var(--vscode-editor-background); /* Overall page background */
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

/* --- 2. Main Slide Navigation Controls (Bottom of Viewport) --- */
#controls {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 40px; /* Fixed height for the controls bar */
    padding: 0 10px; /* Horizontal padding */
    background-color: var(--vscode-editorWidget-background, #252526);
    border-top: 1px solid var(--vscode-editorWidget-border, #454545); /* Border for the controls frame */
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px; /* Space between buttons and indicator */
    z-index: 1000; /* Ensure controls are above slide content */
}

#slide-indicator {
    min-width: 60px;
    text-align: center;
    color: var(--vscode-editor-foreground);
}

#controls button { /* Styling for Prev/Next buttons */
    padding: 5px 15px;
    background-color: var(--vscode-button-background);
    color: var(--vscode-button-foreground);
    border: 1px solid var(--vscode-button-border, transparent);
    border-radius: 3px; /* Consistent border radius */
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
}

#controls button:hover {
    background-color: var(--vscode-button-hoverBackground);
}

#controls button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* --- 3. Slide Content Area (Scrollable Area for Slides) --- */
#slide-content {
    flex-grow: 1; /* Takes up available vertical space */
    overflow-y: auto; /* Allows scrolling BETWEEN multiple slides */
    padding: 20px;    /* Padding around the collection of slides */
    margin-bottom: 40px; /* Space for the fixed bottom #controls bar */
    display: flex;
    flex-direction: column;
    align-items: center; /* Center slides horizontally if they have a max-width */
}

/* --- 4. Individual Slide (Cell) Styling --- */
.cell {
    /* Visual container for each slide */
    margin: 0 0 25px 0; /* Bottom margin for spacing between slides */
    width: 100%;
    max-width: 900px;   /* Max width for a slide */

    /* Consistent slide height management */
    height: 70vh;       /* Target height: 70% of viewport height */
    min-height: 400px;  /* Minimum slide height */
    max-height: 650px;  /* Maximum slide height (adjust as needed) */

    background-color: var(--vscode-sideBar-background, #252526); /* Slide background, distinct from page */
    border: 1px solid var(--vscode-notebook-cellBorderColor, var(--vscode-editorGroup-border, #373737));
    border-radius: 4px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);

    position: relative; /* For the absolutely positioned cell-toolbar */
    padding-top: 36px;  /* Space FOR the cell-toolbar (must match toolbar height) */

    display: flex;
    flex-direction: column; /* Stack toolbar's space, then content (markdown-content or code-cell-body) */
    overflow: hidden;   /* IMPORTANT: Clips any content its children don't handle with their own scrollbars */
}

/* --- 5. Cell-Specific Toolbar (Run, Delete, etc.) --- */
.cell-toolbar {
    position: absolute; /* Positioned relative to the .cell */
    top: 0;
    left: 0;
    right: 0; /* Spans full width of .cell */
    height: 36px; /* Fixed height - MUST match .cell padding-top */
    display: flex;
    justify-content: flex-end; /* Align buttons to the right */
    align-items: center; /* Vertically center buttons */
    padding: 0 10px; /* Horizontal padding for buttons */
    background-color: var(--vscode-editorGroupHeader-tabsBackground, #2c2c2c); /* Toolbar distinct background */
    border-bottom: 1px solid var(--vscode-notebook-cellBorderColor, var(--vscode-editorGroup-border, #373737));
    z-index: 10; /* Ensure it's above other cell content if it were to overlap (shouldn't with padding-top) */
}

.cell-action-button {
    background: none;
    border: none;
    color: var(--vscode-icon-foreground);
    cursor: pointer;
    padding: 4px 8px;
    margin-left: 8px; /* Space between action buttons */
    font-size: var(--vscode-font-size);
    border-radius: 3px;
}

.cell-action-button:hover {
    background-color: var(--vscode-toolbar-hoverBackground, var(--vscode-list-hoverBackground, rgba(255, 255, 255, 0.1)));
}

.cell-action-button:active {
    background-color: var(--vscode-toolbar-activeBackground, var(--vscode-list-activeSelectionBackground, rgba(255, 255, 255, 0.2)));
}

/* --- 6. Markdown Cell Content --- */
/* .markdown-cell specific styles (if any beyond .cell) can go here */
/* e.g., if it needed different internal padding than code cells before content */

.markdown-cell .markdown-content {
    padding: 16px 20px; /* Internal padding for the text block */
    flex-grow: 1;       /* Takes available vertical space within the .cell (after cell's padding-top) */
    overflow-y: hidden; /* As requested: NO SCROLLBAR for markdown, content will be clipped if too tall */
                        /* Change to 'auto' to enable scrollbar if markdown overflows */
    line-height: 1.6;
    /* Text color inherited from .cell or body */
}

/* Detailed Markdown Element Styles */
.markdown-cell .markdown-content h1,
.markdown-cell .markdown-content h2,
.markdown-cell .markdown-content h3,
.markdown-cell .markdown-content h4,
.markdown-cell .markdown-content h5,
.markdown-cell .markdown-content h6 {
    font-weight: 600;
    margin-top: 1em;
    margin-bottom: 0.5em;
    line-height: 1.3;
}

.markdown-cell .markdown-content p {
    margin-top: 0;
    margin-bottom: 1em;
}

.markdown-cell .markdown-content a {
    color: var(--vscode-textLink-foreground);
    text-decoration: none;
}

.markdown-cell .markdown-content a:hover {
    text-decoration: underline;
}

.markdown-cell .markdown-content code { /* Inline code */
    font-family: var(--vscode-editor-font-family);
    background-color: var(--vscode-textCodeBlock-background, rgba(0,0,0,0.2));
    padding: 0.2em 0.4em;
    font-size: 0.9em;
    border-radius: 3px;
}

.markdown-cell .markdown-content pre { /* Code blocks */
    background-color: var(--vscode-textCodeBlock-background, rgba(0,0,0,0.2));
    padding: 10px;
    border-radius: 3px;
    overflow-x: auto; /* Allow horizontal scroll for long code lines in markdown */
    margin-top: 0;
    margin-bottom: 1em;
}

.markdown-cell .markdown-content pre code { /* Code within pre */
    padding: 0;
    background-color: transparent;
    font-size: 1em;
    border-radius: 0;
}

.markdown-cell .markdown-content ul,
.markdown-cell .markdown-content ol {
    padding-left: 2em;
    margin-top: 0;
    margin-bottom: 1em;
}

.markdown-cell .markdown-content blockquote {
    margin: 0 0 1em 0;
    padding: 0.5em 1em;
    color: var(--vscode-textBlockQuote-foreground, var(--vscode-editor-foreground));
    border-left: 0.25em solid var(--vscode-textBlockQuote-border, var(--vscode-editorWidget-border, #ccc));
    background-color: var(--vscode-textBlockQuote-background, transparent);
}

/* --- 7. Code Cell Content --- */
/* .code-cell specific styles (if any beyond .cell) can go here */

.code-cell .code-cell-body { /* Container for editor and output */
    display: flex;
    flex-direction: row; /* Side-by-side editor and output */
    flex-grow: 1;        /* Fills available vertical space in .cell (after cell's padding-top) */
    min-height: 0;       /* Essential for children to size correctly with flex-basis: 0 */
    overflow: hidden;    /* Prevent children from expanding this container */
}

.code-editor-container {
    flex-grow: 2;  /* Editor takes 2/3 of the width */
    flex-basis: 0;
    min-width: 0;  /* Allow shrinking */

    display: flex; /* To allow Monaco instance to fill this container */
    flex-direction: column;
    position: relative; /* For Monaco's internal positioning needs */

    background-color: var(--vscode-editor-background); /* Editor area background */
    border: 1px solid var(--vscode-input-border, #3c3c3c); /* Border defining editor area */
    border-radius: 2px;
    margin: 5px; /* Small margin around editor area; adjust if output has margin too */
    margin-right: 2.5px; /* Half margin if output also has margin-left */
    overflow: hidden; /* Monaco handles its own internal scrolling */
}

/* Ensure Monaco's root div fills the .code-editor-container */
.code-editor-container > .monaco-editor,
.code-editor-container > div[data-keybinding-context] { /* Common Monaco top-level classes */
    flex-grow: 1;    /* Make editor UI fill vertically */
    min-height: 0;   /* Allow shrinking vertically */
    width: 100%;     /* Take full width of parent */
}

.cell-output-wrapper {
    flex-grow: 1;  /* Output takes 1/3 of the width */
    flex-basis: 0;
    min-width: 0;  /* Allow shrinking */

    display: flex;
    flex-direction: column;

    padding: 8px 16px; /* Internal padding for content */
    background-color: var(--vscode-notebook-outputContainerBackground, var(--vscode-editorPane-background));
    overflow-y: auto;   /* CRUCIAL: Enables scrolling for output content */
    border: 1px solid var(--vscode-input-border, #3c3c3c);
    border-radius: 2px;
    margin: 5px;
    margin-left: 2.5px; /* Half margin if editor has margin-right */
}

/* --- 8. Output Item Styling (within .cell-output-wrapper) --- */
.code-output .output-item {
    margin-bottom: 8px;
    padding: 8px;
    border-radius: 2px;
}
.code-output .output-item:last-child {
    margin-bottom: 0;
}

.code-output .output-item hr.output-separator { /* Hiding these as per previous cleanup */
    display: none;
}

.code-output .output-stream pre,
.code-output .output-text pre {
    margin: 0;
    white-space: pre-wrap;
    word-wrap: break-word;
    font-family: var(--vscode-editor-font-family);
    font-size: var(--vscode-editor-font-size);
    line-height: var(--vscode-editor-line-height, 1.5);
}

.code-output .output-error pre {
    margin: 0;
    white-space: pre-wrap;
    word-wrap: break-word;
    font-family: var(--vscode-editor-font-family);
    font-size: var(--vscode-editor-font-size);
    line-height: var(--vscode-editor-line-height, 1.5);
    color: var(--vscode-errorForeground);
    background-color: var(--vscode-editorError-background, rgba(255,0,0,0.1));
    padding: 8px;
}

.code-output .output-image img {
    max-width: 100%;
    height: auto;
    display: block;
    margin-top: 5px;
    margin-bottom: 5px;
    background-color: white; /* For transparent images on dark themes */
    border-radius: 2px;
}

.code-output .output-html {
    /* Base styles for HTML output, actual content will vary */
}